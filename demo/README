pdp++/demo:

Each directory contains a set of demonstration projects for the 
various algorithms.  These are useful for exploring the algorithms
and understanding how to accomplish certain things with them.

Basic examples of the various algorithms:

bp: 	use the bp++ program to explore XOR, and build your own 424
	encoder. both examples are the subject of the tutorial
	chapter in the manual.

rbp:	two versions of recurrent backprop applied to the xor task.
	one is real-time continuous recurrent backprop through time,
	which is capable of learning trajectories over time, and the other
	is the Almeida-Pineda algorithm, which learns to settle into
	an attractor.  both simply settle into stable attractor states.

cs:	the constraint satisfaction system is shown with two examples--one
	is yet another different version of the xor problem--this time 
	using a stochastic network that learns to match a distribution of
	different patterns on a set of output units, where the patterns
	are the input-output values of xor.  the other example is a large
	constraint satisfaction network that processes ambiguous displays
	and decides which region is figure and which is ground.  this one 
	shows how to set up complicated pre-wired connectivity patterns.

so:	self-organizing learning algorithms!


Misc examples of other software features:

bp_misc: examples of various other things to do with bp, and other
	 aspects of the software.

bp_srn:  a simple-recurrent network that learns to act like a
	 finite-state-automaton.

bridge:  shows how to link together two networks, which could be using
	 different algorithms, and have processing in one influence
	 processing in the other.

css:	 example code for compiling a hard-coded version of a css file.
	 also a useful utility for analysing log files generated by pdp++.

leabra:	 contains leabra demos (including interactive navigation environment).

hard_of_css: another css hard-coding example, for computing analytic 
	     measures of hippocampal function.

bench:	 benchmarking code for assessing performance on different machines.
