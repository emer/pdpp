// File Automatically Generated by MakeTA
// DO NOT EDIT


#include <ta/typea.h>
#include <ta/typea_constr.h>
#include <css/basic_types.h>
#include <css/c_ptr_types.h>
#include <css/ta_css.h>
#include <lstm.h>
#include "lstm_TA_type.h"
#include "lstm_TA_inst.h"


// Types

TypeDef TA_LstmBpUnit("LstmBpUnit", " LSTM unit: keeps prior activation state", 
	"NO_UPDATE_AFTER DMEM_SHARE_SETS_3 DMEM_SHARE_SETS_4 ", "NO_UPDATE_AFTER DMEM_SHARE_SETS_3 DMEM_SHARE_SETS_4 ", "", sizeof(LstmBpUnit), (void**)&TAI_LstmBpUnit, 0, 0, 0,1);
TypeDef TA_MemBpUnit("MemBpUnit", " LSTM memory unit: act is post-output-gated value", 
	"NO_UPDATE_AFTER DMEM_SHARE_SETS_3 DMEM_SHARE_SETS_4 ", "NO_UPDATE_AFTER DMEM_SHARE_SETS_3 DMEM_SHARE_SETS_4 ", "", sizeof(MemBpUnit), (void**)&TAI_MemBpUnit, 0, 0, 0,1);
TypeDef TA_LstmBpUnit_ptr("LstmBpUnit_ptr", 1, 1, 0, 0,1);
TypeDef TA_LstmBpConSpec("LstmBpConSpec", " connection spec for Lstm algorithm: uses previous act for weight change computation", 
	"EXT_spec MEMB_IN_GPMENU ", "EXT_spec MEMB_IN_GPMENU ", "", sizeof(LstmBpConSpec), (void**)&TAI_LstmBpConSpec, 1, 0, 0,1);
TypeDef TA_const_LstmBpConSpec("const_LstmBpConSpec", 1, 0, 0, 0,1);
TypeDef TA_const_LstmBpConSpec_ref("const_LstmBpConSpec_ref", 1, 0, 1, 0,1);
TypeDef TA_InGateToMemConSpec("InGateToMemConSpec", " connection sends input gating value to the mem unit receiver", 
	"EXT_spec MEMB_IN_GPMENU ", "EXT_spec MEMB_IN_GPMENU ", "", sizeof(InGateToMemConSpec), (void**)&TAI_InGateToMemConSpec, 1, 0, 0,1);
TypeDef TA_const_InGateToMemConSpec("const_InGateToMemConSpec", 1, 0, 0, 0,1);
TypeDef TA_FrgGateToMemConSpec("FrgGateToMemConSpec", " connection sends forget gating value to the mem unit receiver", 
	"EXT_spec MEMB_IN_GPMENU ", "EXT_spec MEMB_IN_GPMENU ", "", sizeof(FrgGateToMemConSpec), (void**)&TAI_FrgGateToMemConSpec, 1, 0, 0,1);
TypeDef TA_const_InGateToMemConSpec_ref("const_InGateToMemConSpec_ref", 1, 0, 1, 0,1);
TypeDef TA_MemBpUnit_ptr("MemBpUnit_ptr", 1, 1, 0, 0,1);
TypeDef TA_const_FrgGateToMemConSpec("const_FrgGateToMemConSpec", 1, 0, 0, 0,1);
TypeDef TA_const_FrgGateToMemConSpec_ref("const_FrgGateToMemConSpec_ref", 1, 0, 1, 0,1);
TypeDef TA_OutGateToMemConSpec("OutGateToMemConSpec", " connection sends output gating value to the mem unit receiver", 
	"EXT_spec MEMB_IN_GPMENU ", "EXT_spec MEMB_IN_GPMENU ", "", sizeof(OutGateToMemConSpec), (void**)&TAI_OutGateToMemConSpec, 1, 0, 0,1);
TypeDef TA_const_OutGateToMemConSpec("const_OutGateToMemConSpec", 1, 0, 0, 0,1);
TypeDef TA_const_OutGateToMemConSpec_ref("const_OutGateToMemConSpec_ref", 1, 0, 1, 0,1);
TypeDef TA_DmemBpCon("DmemBpCon", " holds derivatives needed for input and forget gate connections", 
	"NO_UPDATE_AFTER ", "NO_UPDATE_AFTER ", "", sizeof(DmemBpCon), (void**)&TAI_DmemBpCon, 0, 0, 0,1);
TypeDef TA_DmemBpCon_ptr("DmemBpCon_ptr", 1, 1, 0, 0,1);
TypeDef TA_const_DmemBpCon("const_DmemBpCon", 1, 0, 0, 0,1);
TypeDef TA_const_DmemBpCon_ref("const_DmemBpCon_ref", 1, 0, 1, 0,1);
TypeDef TA_DmemBpConSpec("DmemBpConSpec", " base class for conspecs operating on DmemBpCon objects", 
	"EXT_spec MEMB_IN_GPMENU ", "EXT_spec MEMB_IN_GPMENU ", "", sizeof(DmemBpConSpec), (void**)&TAI_DmemBpConSpec, 1, 0, 0,1);
TypeDef TA_const_DmemBpConSpec("const_DmemBpConSpec", 1, 0, 0, 0,1);
TypeDef TA_const_DmemBpConSpec_ref("const_DmemBpConSpec_ref", 1, 0, 1, 0,1);
TypeDef TA_InGateInConSpec("InGateInConSpec", " required for *inputs* to input gate units (InGateBpConSpec is for input gate to memory cells), requires DmemBpCon cons", 
	"EXT_spec MEMB_IN_GPMENU ", "EXT_spec MEMB_IN_GPMENU ", "", sizeof(InGateInConSpec), (void**)&TAI_InGateInConSpec, 1, 0, 0,1);
TypeDef TA_const_InGateInConSpec("const_InGateInConSpec", 1, 0, 0, 0,1);
TypeDef TA_const_InGateInConSpec_ref("const_InGateInConSpec_ref", 1, 0, 1, 0,1);
TypeDef TA_FrgGateInConSpec("FrgGateInConSpec", " required for *inputs* to forget gate units (FrgGateBpConSpec is for input gate to memory cells), requires DmemBpCon cons", 
	"EXT_spec MEMB_IN_GPMENU ", "EXT_spec MEMB_IN_GPMENU ", "", sizeof(FrgGateInConSpec), (void**)&TAI_FrgGateInConSpec, 1, 0, 0,1);
TypeDef TA_const_FrgGateInConSpec("const_FrgGateInConSpec", 1, 0, 0, 0,1);
TypeDef TA_const_FrgGateInConSpec_ref("const_FrgGateInConSpec_ref", 1, 0, 1, 0,1);
TypeDef TA_MemGateInConSpec("MemGateInConSpec", " required for *inputs* to memory units, equires DmemBpCon cons", 
	"EXT_spec MEMB_IN_GPMENU ", "EXT_spec MEMB_IN_GPMENU ", "", sizeof(MemGateInConSpec), (void**)&TAI_MemGateInConSpec, 1, 0, 0,1);
TypeDef TA_const_MemGateInConSpec("const_MemGateInConSpec", 1, 0, 0, 0,1);
TypeDef TA_const_MemGateInConSpec_ref("const_MemGateInConSpec_ref", 1, 0, 1, 0,1);
TypeDef TA_LstmBpUnitSpec("LstmBpUnitSpec", " LSTM unit spec: keeps prior activation state", 
	"EXT_spec MEMB_IN_GPMENU ", "EXT_spec MEMB_IN_GPMENU ", "", sizeof(LstmBpUnitSpec), (void**)&TAI_LstmBpUnitSpec, 1, 0, 0,1);
TypeDef TA_const_LstmBpUnit("const_LstmBpUnit", 1, 0, 0, 0,1);
TypeDef TA_const_LstmBpUnitSpec("const_LstmBpUnitSpec", 1, 0, 0, 0,1);
TypeDef TA_const_LstmBpUnit_ref("const_LstmBpUnit_ref", 1, 0, 1, 0,1);
TypeDef TA_const_LstmBpUnitSpec_ref("const_LstmBpUnitSpec_ref", 1, 0, 1, 0,1);
TypeDef TA_DmemBpUnitSpec("DmemBpUnitSpec", " spec for input and forget gate units, which require funky memory-cell specific derivatives stored in each input connection", 
	"EXT_spec MEMB_IN_GPMENU ", "EXT_spec MEMB_IN_GPMENU ", "", sizeof(DmemBpUnitSpec), (void**)&TAI_DmemBpUnitSpec, 1, 0, 0,1);
TypeDef TA_const_DmemBpUnitSpec("const_DmemBpUnitSpec", 1, 0, 0, 0,1);
TypeDef TA_MemBpUnitSpec("MemBpUnitSpec", " spec for an LSTM gated memory unit: self con is implicit, act_range is for output xform", 
	"EXT_spec MEMB_IN_GPMENU ", "EXT_spec MEMB_IN_GPMENU ", "", sizeof(MemBpUnitSpec), (void**)&TAI_MemBpUnitSpec, 1, 0, 0,1);
TypeDef TA_const_DmemBpUnitSpec_ref("const_DmemBpUnitSpec_ref", 1, 0, 1, 0,1);
TypeDef TA_const_MemBpUnit("const_MemBpUnit", 1, 0, 0, 0,1);
TypeDef TA_const_MemBpUnitSpec("const_MemBpUnitSpec", 1, 0, 0, 0,1);
TypeDef TA_const_MemBpUnit_ref("const_MemBpUnit_ref", 1, 0, 1, 0,1);
TypeDef TA_const_MemBpUnitSpec_ref("const_MemBpUnitSpec_ref", 1, 0, 1, 0,1);
TypeDef TA_LstmBpTrial("LstmBpTrial", " special trial process for LSTM algorithm", 
	"EXT_proc MEMB_IN_GPMENU AGGOP_SUM ", "EXT_proc MEMB_IN_GPMENU AGGOP_SUM ", "", sizeof(LstmBpTrial), (void**)&TAI_LstmBpTrial, 1, 0, 0,1);
TypeDef TA_const_LstmBpTrial("const_LstmBpTrial", 1, 0, 0, 0,1);
TypeDef TA_const_LstmBpTrial_ref("const_LstmBpTrial_ref", 1, 0, 1, 0,1);

// Instances

LstmBpUnit*		 TAI_LstmBpUnit=NULL;
MemBpUnit*		 TAI_MemBpUnit=NULL;
LstmBpConSpec*		 TAI_LstmBpConSpec=NULL;
  static cssEl* cssElCFun_LstmBpConSpec_C_Compute_dWt_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((LstmBpConSpec*)ths)->C_Compute_dWt((BpCon*)(void*)*arg[1], (BpUnit*)(void*)*arg[2], (LstmBpUnit*)(void*)*arg[3]);
    return rval;}
  static cssEl* cssElCFun_LstmBpConSpec_Compute_dWt_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((LstmBpConSpec*)ths)->Compute_dWt((Con_Group*)(void*)*arg[1], (Unit*)(void*)*arg[2]);
    return rval;}
  static cssEl* cssElCFun_LstmBpConSpec_GetGateType_stub(void* ths,int, cssEl**) {
    cssEl* rval=&cssMisc::Void;
    ((LstmBpConSpec*)ths)->GetGateType();
    return rval;}
InGateToMemConSpec*		 TAI_InGateToMemConSpec=NULL;
  static cssEl* cssElCFun_InGateToMemConSpec_Compute_dEdA_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    rval=new cssReal((double)((InGateToMemConSpec*)ths)->Compute_dEdA((BpCon_Group*)(void*)*arg[1], (BpUnit*)(void*)*arg[2]));
    return rval;}
FrgGateToMemConSpec*		 TAI_FrgGateToMemConSpec=NULL;
  static cssEl* cssElCFun_FrgGateToMemConSpec_Compute_dEdA_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    rval=new cssReal((double)((FrgGateToMemConSpec*)ths)->Compute_dEdA((BpCon_Group*)(void*)*arg[1], (BpUnit*)(void*)*arg[2]));
    return rval;}
OutGateToMemConSpec*		 TAI_OutGateToMemConSpec=NULL;
  static cssEl* cssElCFun_OutGateToMemConSpec_C_Compute_dEdA_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    rval=new cssReal((double)((OutGateToMemConSpec*)ths)->C_Compute_dEdA((BpCon*)(void*)*arg[1], (MemBpUnit*)(void*)*arg[2], (BpUnit*)(void*)*arg[3]));
    return rval;}
  static cssEl* cssElCFun_OutGateToMemConSpec_Compute_dEdA_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    rval=new cssReal((double)((OutGateToMemConSpec*)ths)->Compute_dEdA((BpCon_Group*)(void*)*arg[1], (BpUnit*)(void*)*arg[2]));
    return rval;}
DmemBpCon*		 TAI_DmemBpCon=NULL;
  static cssEl* cssElCFun_DmemBpCon_InitMem_stub(void* ths,int, cssEl**) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpCon*)ths)->InitMem();
    return rval;}
DmemBpConSpec*		 TAI_DmemBpConSpec=NULL;
  static cssEl* cssElCFun_DmemBpConSpec_C_Compute_dWt_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpConSpec*)ths)->C_Compute_dWt((DmemBpCon*)(void*)*arg[1], (LstmBpUnit*)(void*)*arg[2], (LstmBpUnit*)(void*)*arg[3]);
    return rval;}
  static cssEl* cssElCFun_DmemBpConSpec_Compute_dWt_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpConSpec*)ths)->Compute_dWt((Con_Group*)(void*)*arg[1], (Unit*)(void*)*arg[2]);
    return rval;}
  static cssEl* cssElCFun_DmemBpConSpec_Compute_dEdA_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    rval=new cssReal((double)((DmemBpConSpec*)ths)->Compute_dEdA((BpCon_Group*)(void*)*arg[1], (BpUnit*)(void*)*arg[2]));
    return rval;}
  static cssEl* cssElCFun_DmemBpConSpec_B_Compute_dWt_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpConSpec*)ths)->B_Compute_dWt((BpCon*)(void*)*arg[1], (BpUnit*)(void*)*arg[2]);
    return rval;}
  static cssEl* cssElCFun_DmemBpConSpec_InitMem_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpConSpec*)ths)->InitMem((Con_Group*)(void*)*arg[1]);
    return rval;}
  static cssEl* cssElCFun_DmemBpConSpec_InitMemSum_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpConSpec*)ths)->InitMemSum((Con_Group*)(void*)*arg[1]);
    return rval;}
  static cssEl* cssElCFun_DmemBpConSpec_Compute_Dmem_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpConSpec*)ths)->Compute_Dmem((Con_Group*)(void*)*arg[1], (LstmBpUnit*)(void*)*arg[2], (MemBpUnit*)(void*)*arg[3], (int)*arg[4]);
    return rval;}
  static cssEl* cssElCFun_DmemBpConSpec_C_Compute_DmemSum_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpConSpec*)ths)->C_Compute_DmemSum((DmemBpCon*)(void*)*arg[1], (LstmBpUnit*)(void*)*arg[2], (MemBpUnit*)(void*)*arg[3], (int)*arg[4]);
    return rval;}
  static cssEl* cssElCFun_DmemBpConSpec_Compute_DmemSum_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpConSpec*)ths)->Compute_DmemSum((Con_Group*)(void*)*arg[1], (LstmBpUnit*)(void*)*arg[2], (MemBpUnit*)(void*)*arg[3], (int)*arg[4]);
    return rval;}
  static cssEl* cssElCFun_DmemBpConSpec_B_Compute_Dmem_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpConSpec*)ths)->B_Compute_Dmem((DmemBpCon*)(void*)*arg[1], (LstmBpUnit*)(void*)*arg[2], (MemBpUnit*)(void*)*arg[3], (int)*arg[4]);
    return rval;}
InGateInConSpec*		 TAI_InGateInConSpec=NULL;
  static cssEl* cssElCFun_InGateInConSpec_C_Compute_Dmem_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((InGateInConSpec*)ths)->C_Compute_Dmem((DmemBpCon*)(void*)*arg[1], (LstmBpUnit*)(void*)*arg[2], (MemBpUnit*)(void*)*arg[3], (int)*arg[4], (LstmBpUnit*)(void*)*arg[5]);
    return rval;}
FrgGateInConSpec*		 TAI_FrgGateInConSpec=NULL;
  static cssEl* cssElCFun_FrgGateInConSpec_C_Compute_Dmem_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((FrgGateInConSpec*)ths)->C_Compute_Dmem((DmemBpCon*)(void*)*arg[1], (LstmBpUnit*)(void*)*arg[2], (MemBpUnit*)(void*)*arg[3], (int)*arg[4], (LstmBpUnit*)(void*)*arg[5]);
    return rval;}
MemGateInConSpec*		 TAI_MemGateInConSpec=NULL;
  static cssEl* cssElCFun_MemGateInConSpec_C_Compute_dWt_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((MemGateInConSpec*)ths)->C_Compute_dWt((DmemBpCon*)(void*)*arg[1], (LstmBpUnit*)(void*)*arg[2], (LstmBpUnit*)(void*)*arg[3]);
    return rval;}
  static cssEl* cssElCFun_MemGateInConSpec_Compute_dWt_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((MemGateInConSpec*)ths)->Compute_dWt((Con_Group*)(void*)*arg[1], (Unit*)(void*)*arg[2]);
    return rval;}
  static cssEl* cssElCFun_MemGateInConSpec_C_Compute_Dmem_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((MemGateInConSpec*)ths)->C_Compute_Dmem((DmemBpCon*)(void*)*arg[1], (MemBpUnit*)(void*)*arg[2], (LstmBpUnit*)(void*)*arg[3]);
    return rval;}
LstmBpUnitSpec*		 TAI_LstmBpUnitSpec=NULL;
  static cssEl* cssElCFun_LstmBpUnitSpec_InitState_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((LstmBpUnitSpec*)ths)->InitState((Unit*)(void*)*arg[1]);
    return rval;}
  static cssEl* cssElCFun_LstmBpUnitSpec_Compute_Act_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((LstmBpUnitSpec*)ths)->Compute_Act((Unit*)(void*)*arg[1]);
    return rval;}
  static cssEl* cssElCFun_LstmBpUnitSpec_CheckConfig_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    rval=new cssInt((int)((LstmBpUnitSpec*)ths)->CheckConfig((Unit*)(void*)*arg[1], (Layer*)(void*)*arg[2], (TrialProcess*)(void*)*arg[3]));
    return rval;}
DmemBpUnitSpec*		 TAI_DmemBpUnitSpec=NULL;
  static cssEl* cssElCFun_DmemBpUnitSpec_InitState_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpUnitSpec*)ths)->InitState((Unit*)(void*)*arg[1]);
    return rval;}
  static cssEl* cssElCFun_DmemBpUnitSpec_CheckConfig_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    rval=new cssInt((int)((DmemBpUnitSpec*)ths)->CheckConfig((Unit*)(void*)*arg[1], (Layer*)(void*)*arg[2], (TrialProcess*)(void*)*arg[3]));
    return rval;}
  static cssEl* cssElCFun_DmemBpUnitSpec_Compute_dEdNet_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpUnitSpec*)ths)->Compute_dEdNet((BpUnit*)(void*)*arg[1]);
    return rval;}
  static cssEl* cssElCFun_DmemBpUnitSpec_Compute_Dmem_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((DmemBpUnitSpec*)ths)->Compute_Dmem((LstmBpUnit*)(void*)*arg[1]);
    return rval;}
MemBpUnitSpec*		 TAI_MemBpUnitSpec=NULL;
  static cssEl* cssElCFun_MemBpUnitSpec_InitState_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((MemBpUnitSpec*)ths)->InitState((Unit*)(void*)*arg[1]);
    return rval;}
  static cssEl* cssElCFun_MemBpUnitSpec_Compute_Net_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((MemBpUnitSpec*)ths)->Compute_Net((Unit*)(void*)*arg[1]);
    return rval;}
  static cssEl* cssElCFun_MemBpUnitSpec_Compute_Act_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((MemBpUnitSpec*)ths)->Compute_Act((Unit*)(void*)*arg[1]);
    return rval;}
  static cssEl* cssElCFun_MemBpUnitSpec_CheckConfig_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    rval=new cssInt((int)((MemBpUnitSpec*)ths)->CheckConfig((Unit*)(void*)*arg[1], (Layer*)(void*)*arg[2], (TrialProcess*)(void*)*arg[3]));
    return rval;}
  static cssEl* cssElCFun_MemBpUnitSpec_Compute_dEdNet_stub(void* ths,int, cssEl** arg) {
    cssEl* rval=&cssMisc::Void;
    ((MemBpUnitSpec*)ths)->Compute_dEdNet((BpUnit*)(void*)*arg[1]);
    return rval;}
LstmBpTrial*		 TAI_LstmBpTrial=NULL;
  static cssEl* cssElCFun_LstmBpTrial_Compute_ClampExt_stub(void* ths,int, cssEl**) {
    cssEl* rval=&cssMisc::Void;
    ((LstmBpTrial*)ths)->Compute_ClampExt();
    return rval;}
  static cssEl* cssElCFun_LstmBpTrial_Compute_NetHid_stub(void* ths,int, cssEl**) {
    cssEl* rval=&cssMisc::Void;
    ((LstmBpTrial*)ths)->Compute_NetHid();
    return rval;}
  static cssEl* cssElCFun_LstmBpTrial_Compute_NetOut_stub(void* ths,int, cssEl**) {
    cssEl* rval=&cssMisc::Void;
    ((LstmBpTrial*)ths)->Compute_NetOut();
    return rval;}
  static cssEl* cssElCFun_LstmBpTrial_Compute_ActHid_stub(void* ths,int, cssEl**) {
    cssEl* rval=&cssMisc::Void;
    ((LstmBpTrial*)ths)->Compute_ActHid();
    return rval;}
  static cssEl* cssElCFun_LstmBpTrial_Compute_ActOut_stub(void* ths,int, cssEl**) {
    cssEl* rval=&cssMisc::Void;
    ((LstmBpTrial*)ths)->Compute_ActOut();
    return rval;}
  static cssEl* cssElCFun_LstmBpTrial_Compute_Dmem_stub(void* ths,int, cssEl**) {
    cssEl* rval=&cssMisc::Void;
    ((LstmBpTrial*)ths)->Compute_Dmem();
    return rval;}

// Type Data

static int LstmBpUnit::* TA_LstmBpUnit_MbrOff;
static MemberDef_data TA_LstmBpUnit_MemberDef[]={
  {&TA_float,NULL,"act_prv"," previous activation value (for learning)","","",
    *((ta_memb_ptr*)&(TA_LstmBpUnit_MbrOff=(int LstmBpUnit::*)(&LstmBpUnit::act_prv))),0,NULL,0},
  NULL};
static int MemBpUnit::* TA_MemBpUnit_MbrOff;
static MemberDef_data TA_MemBpUnit_MemberDef[]={
  {&TA_float,NULL,"in_gt"," input gate value","","",
    *((ta_memb_ptr*)&(TA_MemBpUnit_MbrOff=(int MemBpUnit::*)(&MemBpUnit::in_gt))),0,NULL,0},
  {&TA_float,NULL,"frg_gt"," forget gate value","","",
    *((ta_memb_ptr*)&(TA_MemBpUnit_MbrOff=(int MemBpUnit::*)(&MemBpUnit::frg_gt))),0,NULL,0},
  {&TA_float,NULL,"out_gt"," output gate value","","",
    *((ta_memb_ptr*)&(TA_MemBpUnit_MbrOff=(int MemBpUnit::*)(&MemBpUnit::out_gt))),0,NULL,0},
  {&TA_float,NULL,"act_inx"," input transformed activation (g)","","",
    *((ta_memb_ptr*)&(TA_MemBpUnit_MbrOff=(int MemBpUnit::*)(&MemBpUnit::act_inx))),0,NULL,0},
  {&TA_float,NULL,"act_mem"," internal memory activation value (s)","","",
    *((ta_memb_ptr*)&(TA_MemBpUnit_MbrOff=(int MemBpUnit::*)(&MemBpUnit::act_mem))),0,NULL,0},
  {&TA_float,NULL,"mem_prv"," previous memory activation value (s(t-1))","","",
    *((ta_memb_ptr*)&(TA_MemBpUnit_MbrOff=(int MemBpUnit::*)(&MemBpUnit::mem_prv))),0,NULL,0},
  {&TA_float,NULL,"act_oux"," output transformed activation (h)","","",
    *((ta_memb_ptr*)&(TA_MemBpUnit_MbrOff=(int MemBpUnit::*)(&MemBpUnit::act_oux))),0,NULL,0},
  NULL};
static EnumDef_data TA_LstmBpConSpec_GateType[]={
  {"NOT_GATE","","",0},
  {"IN_GATE","","",1},
  {"FRG_GATE","","",2},
  {"OUT_GATE","","",3},
  NULL};
static int LstmBpConSpec::* TA_LstmBpConSpec_MbrOff;
static MemberDef_data TA_LstmBpConSpec_MemberDef[]={
  {&TA_bool,NULL,"dwt_snd_cur"," learn on sender's current activation value (only for output cons -- otherwise should be prev)","","",
    *((ta_memb_ptr*)&(TA_LstmBpConSpec_MbrOff=(int LstmBpConSpec::*)(&LstmBpConSpec::dwt_snd_cur))),0,NULL,0},
  NULL};
static MethodArgs_data TA_LstmBpConSpec_C_Compute_dWt_MethArgs[]={
  {&TA_BpCon_ptr,NULL,"cn",""},
  {&TA_BpUnit_ptr,NULL,"ru",""},
  {&TA_LstmBpUnit_ptr,NULL,"su",""},
  NULL};
static MethodArgs_data TA_LstmBpConSpec_Compute_dWt_MethArgs[]={
  {&TA_Con_Group_ptr,NULL,"cg",""},
  {&TA_Unit_ptr,NULL,"ru",""},
  NULL};
static MethodDef_data TA_LstmBpConSpec_MethodDef[]={
  {&TA_void,NULL,"C_Compute_dWt","","","",
    2,3,-1,0,NULL,cssElCFun_LstmBpConSpec_C_Compute_dWt_stub,TA_LstmBpConSpec_C_Compute_dWt_MethArgs},
  {&TA_void,NULL,"Compute_dWt"," compute the delta-weight change","","",
    1,2,-1,0,NULL,cssElCFun_LstmBpConSpec_Compute_dWt_stub,TA_LstmBpConSpec_Compute_dWt_MethArgs},
  {NULL,"::GateType","GetGateType","","","",
    0,0,-1,0,NULL,cssElCFun_LstmBpConSpec_GetGateType_stub,NULL},
  NULL};
static MethodArgs_data TA_InGateToMemConSpec_Compute_dEdA_MethArgs[]={
  {&TA_BpCon_Group_ptr,NULL,"na",""},
  {&TA_BpUnit_ptr,NULL,"na",""},
  NULL};
static MethodDef_data TA_InGateToMemConSpec_MethodDef[]={
  {&TA_float,NULL,"Compute_dEdA"," get error from units I send to don't send error -- computed via Dmem","","",
    1,2,-1,0,NULL,cssElCFun_InGateToMemConSpec_Compute_dEdA_stub,TA_InGateToMemConSpec_Compute_dEdA_MethArgs},
  NULL};
static MethodArgs_data TA_FrgGateToMemConSpec_Compute_dEdA_MethArgs[]={
  {&TA_BpCon_Group_ptr,NULL,"na",""},
  {&TA_BpUnit_ptr,NULL,"na",""},
  NULL};
static MethodDef_data TA_FrgGateToMemConSpec_MethodDef[]={
  {&TA_float,NULL,"Compute_dEdA"," get error from units I send to don't send error -- computed via Dmem","","",
    1,2,-1,0,NULL,cssElCFun_FrgGateToMemConSpec_Compute_dEdA_stub,TA_FrgGateToMemConSpec_Compute_dEdA_MethArgs},
  NULL};
static MethodArgs_data TA_OutGateToMemConSpec_C_Compute_dEdA_MethArgs[]={
  {&TA_BpCon_ptr,NULL,"cn",""},
  {&TA_MemBpUnit_ptr,NULL,"ru",""},
  {&TA_BpUnit_ptr,NULL,"su",""},
  NULL};
static MethodArgs_data TA_OutGateToMemConSpec_Compute_dEdA_MethArgs[]={
  {&TA_BpCon_Group_ptr,NULL,"cg",""},
  {&TA_BpUnit_ptr,NULL,"su",""},
  NULL};
static MethodDef_data TA_OutGateToMemConSpec_MethodDef[]={
  {&TA_float,NULL,"C_Compute_dEdA","","","",
    1,3,-1,0,NULL,cssElCFun_OutGateToMemConSpec_C_Compute_dEdA_stub,TA_OutGateToMemConSpec_C_Compute_dEdA_MethArgs},
  {&TA_float,NULL,"Compute_dEdA"," get error from units I send to error has to take into account multiplication, etc on mem unit","","",
    1,2,-1,0,NULL,cssElCFun_OutGateToMemConSpec_Compute_dEdA_stub,TA_OutGateToMemConSpec_Compute_dEdA_MethArgs},
  NULL};
static int DmemBpCon::* TA_DmemBpCon_MbrOff;
static MemberDef_data TA_DmemBpCon_MemberDef[]={
  {&TA_float_ary,NULL,"dMdw"," derivative of memory unit with respect to weight","NO_SAVE ","",
    *((ta_memb_ptr*)&(TA_DmemBpCon_MbrOff=(int DmemBpCon::*)(&DmemBpCon::dMdw))),0,NULL,0},
  {&TA_float,NULL,"dMdw_sum"," sum of derivatives","NO_SAVE ","",
    *((ta_memb_ptr*)&(TA_DmemBpCon_MbrOff=(int DmemBpCon::*)(&DmemBpCon::dMdw_sum))),0,NULL,0},
  NULL};
static MethodDef_data TA_DmemBpCon_MethodDef[]={
  {&TA_void,NULL,"InitMem","","","",
    0,0,-1,0,NULL,cssElCFun_DmemBpCon_InitMem_stub,NULL},
  NULL};
static MethodArgs_data TA_DmemBpConSpec_C_Compute_dWt_MethArgs[]={
  {&TA_DmemBpCon_ptr,NULL,"cn",""},
  {&TA_LstmBpUnit_ptr,NULL,"na",""},
  {&TA_LstmBpUnit_ptr,NULL,"na",""},
  NULL};
static MethodArgs_data TA_DmemBpConSpec_Compute_dWt_MethArgs[]={
  {&TA_Con_Group_ptr,NULL,"cg",""},
  {&TA_Unit_ptr,NULL,"ru",""},
  NULL};
static MethodArgs_data TA_DmemBpConSpec_Compute_dEdA_MethArgs[]={
  {&TA_BpCon_Group_ptr,NULL,"na",""},
  {&TA_BpUnit_ptr,NULL,"na",""},
  NULL};
static MethodArgs_data TA_DmemBpConSpec_B_Compute_dWt_MethArgs[]={
  {&TA_BpCon_ptr,NULL,"cn",""},
  {&TA_BpUnit_ptr,NULL,"na",""},
  NULL};
static MethodArgs_data TA_DmemBpConSpec_InitMem_MethArgs[]={
  {&TA_Con_Group_ptr,NULL,"cg",""},
  NULL};
static MethodArgs_data TA_DmemBpConSpec_InitMemSum_MethArgs[]={
  {&TA_Con_Group_ptr,NULL,"cg",""},
  NULL};
static MethodArgs_data TA_DmemBpConSpec_Compute_Dmem_MethArgs[]={
  {&TA_Con_Group_ptr,NULL,"na",""},
  {&TA_LstmBpUnit_ptr,NULL,"na",""},
  {&TA_MemBpUnit_ptr,NULL,"na",""},
  {&TA_int,NULL,"na",""},
  NULL};
static MethodArgs_data TA_DmemBpConSpec_C_Compute_DmemSum_MethArgs[]={
  {&TA_DmemBpCon_ptr,NULL,"cn",""},
  {&TA_LstmBpUnit_ptr,NULL,"ru",""},
  {&TA_MemBpUnit_ptr,NULL,"mem",""},
  {&TA_int,NULL,"memi",""},
  NULL};
static MethodArgs_data TA_DmemBpConSpec_Compute_DmemSum_MethArgs[]={
  {&TA_Con_Group_ptr,NULL,"cg",""},
  {&TA_LstmBpUnit_ptr,NULL,"ru",""},
  {&TA_MemBpUnit_ptr,NULL,"mem",""},
  {&TA_int,NULL,"memi",""},
  NULL};
static MethodArgs_data TA_DmemBpConSpec_B_Compute_Dmem_MethArgs[]={
  {&TA_DmemBpCon_ptr,NULL,"na",""},
  {&TA_LstmBpUnit_ptr,NULL,"na",""},
  {&TA_MemBpUnit_ptr,NULL,"na",""},
  {&TA_int,NULL,"na",""},
  NULL};
static MethodDef_data TA_DmemBpConSpec_MethodDef[]={
  {&TA_void,NULL,"C_Compute_dWt","","","",
    3,3,-1,0,NULL,cssElCFun_DmemBpConSpec_C_Compute_dWt_stub,TA_DmemBpConSpec_C_Compute_dWt_MethArgs},
  {&TA_void,NULL,"Compute_dWt"," compute the delta-weight change","","",
    1,2,-1,0,NULL,cssElCFun_DmemBpConSpec_Compute_dWt_stub,TA_DmemBpConSpec_Compute_dWt_MethArgs},
  {&TA_float,NULL,"Compute_dEdA"," get error from units I send to truncate anything further","","",
    1,2,-1,0,NULL,cssElCFun_DmemBpConSpec_Compute_dEdA_stub,TA_DmemBpConSpec_Compute_dEdA_MethArgs},
  {&TA_void,NULL,"B_Compute_dWt"," Compute dE with respect to the weights","","",
    1,2,-1,0,NULL,cssElCFun_DmemBpConSpec_B_Compute_dWt_stub,TA_DmemBpConSpec_B_Compute_dWt_MethArgs},
  {&TA_void,NULL,"InitMem","","","",
    0,1,-1,0,NULL,cssElCFun_DmemBpConSpec_InitMem_stub,TA_DmemBpConSpec_InitMem_MethArgs},
  {&TA_void,NULL,"InitMemSum"," this is the interface -- need to instantiate in each subclass","","",
    0,1,-1,0,NULL,cssElCFun_DmemBpConSpec_InitMemSum_stub,TA_DmemBpConSpec_InitMemSum_MethArgs},
  {&TA_void,NULL,"Compute_Dmem","","","",
    0,4,-1,0,NULL,cssElCFun_DmemBpConSpec_Compute_Dmem_stub,TA_DmemBpConSpec_Compute_Dmem_MethArgs},
  {&TA_void,NULL,"C_Compute_DmemSum","","","",
    0,4,-1,0,NULL,cssElCFun_DmemBpConSpec_C_Compute_DmemSum_stub,TA_DmemBpConSpec_C_Compute_DmemSum_MethArgs},
  {&TA_void,NULL,"Compute_DmemSum","","","",
    0,4,-1,0,NULL,cssElCFun_DmemBpConSpec_Compute_DmemSum_stub,TA_DmemBpConSpec_Compute_DmemSum_MethArgs},
  {&TA_void,NULL,"B_Compute_Dmem","","","",
    0,4,-1,0,NULL,cssElCFun_DmemBpConSpec_B_Compute_Dmem_stub,TA_DmemBpConSpec_B_Compute_Dmem_MethArgs},
  NULL};
static MethodArgs_data TA_InGateInConSpec_C_Compute_Dmem_MethArgs[]={
  {&TA_DmemBpCon_ptr,NULL,"cn",""},
  {&TA_LstmBpUnit_ptr,NULL,"ru",""},
  {&TA_MemBpUnit_ptr,NULL,"mem",""},
  {&TA_int,NULL,"memi",""},
  {&TA_LstmBpUnit_ptr,NULL,"su",""},
  NULL};
static MethodDef_data TA_InGateInConSpec_MethodDef[]={
  {&TA_void,NULL,"C_Compute_Dmem","","","",
    0,5,-1,0,NULL,cssElCFun_InGateInConSpec_C_Compute_Dmem_stub,TA_InGateInConSpec_C_Compute_Dmem_MethArgs},
  NULL};
static MethodArgs_data TA_FrgGateInConSpec_C_Compute_Dmem_MethArgs[]={
  {&TA_DmemBpCon_ptr,NULL,"cn",""},
  {&TA_LstmBpUnit_ptr,NULL,"ru",""},
  {&TA_MemBpUnit_ptr,NULL,"mem",""},
  {&TA_int,NULL,"memi",""},
  {&TA_LstmBpUnit_ptr,NULL,"su",""},
  NULL};
static MethodDef_data TA_FrgGateInConSpec_MethodDef[]={
  {&TA_void,NULL,"C_Compute_Dmem","","","",
    0,5,-1,0,NULL,cssElCFun_FrgGateInConSpec_C_Compute_Dmem_stub,TA_FrgGateInConSpec_C_Compute_Dmem_MethArgs},
  NULL};
static MethodArgs_data TA_MemGateInConSpec_C_Compute_dWt_MethArgs[]={
  {&TA_DmemBpCon_ptr,NULL,"cn",""},
  {&TA_LstmBpUnit_ptr,NULL,"ru",""},
  {&TA_LstmBpUnit_ptr,NULL,"su",""},
  NULL};
static MethodArgs_data TA_MemGateInConSpec_Compute_dWt_MethArgs[]={
  {&TA_Con_Group_ptr,NULL,"cg",""},
  {&TA_Unit_ptr,NULL,"ru",""},
  NULL};
static MethodArgs_data TA_MemGateInConSpec_C_Compute_Dmem_MethArgs[]={
  {&TA_DmemBpCon_ptr,NULL,"cn",""},
  {&TA_MemBpUnit_ptr,NULL,"mem",""},
  {&TA_LstmBpUnit_ptr,NULL,"su",""},
  NULL};
static MethodDef_data TA_MemGateInConSpec_MethodDef[]={
  {&TA_void,NULL,"C_Compute_dWt","","","",
    3,3,-1,0,NULL,cssElCFun_MemGateInConSpec_C_Compute_dWt_stub,TA_MemGateInConSpec_C_Compute_dWt_MethArgs},
  {&TA_void,NULL,"Compute_dWt"," compute the delta-weight change","","",
    1,2,-1,0,NULL,cssElCFun_MemGateInConSpec_Compute_dWt_stub,TA_MemGateInConSpec_Compute_dWt_MethArgs},
  {&TA_void,NULL,"C_Compute_Dmem","","","",
    0,3,-1,0,NULL,cssElCFun_MemGateInConSpec_C_Compute_Dmem_stub,TA_MemGateInConSpec_C_Compute_Dmem_MethArgs},
  NULL};
static MethodArgs_data TA_LstmBpUnitSpec_InitState_MethArgs[]={
  {&TA_Unit_ptr,NULL,"u",""},
  NULL};
static MethodArgs_data TA_LstmBpUnitSpec_Compute_Act_MethArgs[]={
  {&TA_Unit_ptr,NULL,"u",""},
  NULL};
static MethodArgs_data TA_LstmBpUnitSpec_CheckConfig_MethArgs[]={
  {&TA_Unit_ptr,NULL,"u",""},
  {&TA_Layer_ptr,NULL,"lay",""},
  {&TA_TrialProcess_ptr,NULL,"trl",""},
  NULL};
static MethodDef_data TA_LstmBpUnitSpec_MethodDef[]={
  {&TA_void,NULL,"InitState"," initialize unit state variables","","",
    1,1,-1,0,NULL,cssElCFun_LstmBpUnitSpec_InitState_stub,TA_LstmBpUnitSpec_InitState_MethArgs},
  {&TA_void,NULL,"Compute_Act","","","",
    1,1,-1,0,NULL,cssElCFun_LstmBpUnitSpec_Compute_Act_stub,TA_LstmBpUnitSpec_Compute_Act_MethArgs},
  {&TA_bool,NULL,"CheckConfig"," check for for misc configuration settings required by different algorithms, including settings on the processes","","",
    1,3,-1,0,NULL,cssElCFun_LstmBpUnitSpec_CheckConfig_stub,TA_LstmBpUnitSpec_CheckConfig_MethArgs},
  NULL};
static MethodArgs_data TA_DmemBpUnitSpec_InitState_MethArgs[]={
  {&TA_Unit_ptr,NULL,"u",""},
  NULL};
static MethodArgs_data TA_DmemBpUnitSpec_CheckConfig_MethArgs[]={
  {&TA_Unit_ptr,NULL,"u",""},
  {&TA_Layer_ptr,NULL,"lay",""},
  {&TA_TrialProcess_ptr,NULL,"trl",""},
  NULL};
static MethodArgs_data TA_DmemBpUnitSpec_Compute_dEdNet_MethArgs[]={
  {&TA_BpUnit_ptr,NULL,"u",""},
  NULL};
static MethodArgs_data TA_DmemBpUnitSpec_Compute_Dmem_MethArgs[]={
  {&TA_LstmBpUnit_ptr,NULL,"u",""},
  NULL};
static MethodDef_data TA_DmemBpUnitSpec_MethodDef[]={
  {&TA_void,NULL,"InitState"," initialize unit state variables","","",
    1,1,-1,0,NULL,cssElCFun_DmemBpUnitSpec_InitState_stub,TA_DmemBpUnitSpec_InitState_MethArgs},
  {&TA_bool,NULL,"CheckConfig"," check for for misc configuration settings required by different algorithms, including settings on the processes","","",
    1,3,-1,0,NULL,cssElCFun_DmemBpUnitSpec_CheckConfig_stub,TA_DmemBpUnitSpec_CheckConfig_MethArgs},
  {&TA_void,NULL,"Compute_dEdNet"," error wrt net input this updates dMdw_sum","","",
    1,1,-1,0,NULL,cssElCFun_DmemBpUnitSpec_Compute_dEdNet_stub,TA_DmemBpUnitSpec_Compute_dEdNet_MethArgs},
  {&TA_void,NULL,"Compute_Dmem"," after all the network activations are updated, compute the mem-derivatives","","",
    0,1,-1,0,NULL,cssElCFun_DmemBpUnitSpec_Compute_Dmem_stub,TA_DmemBpUnitSpec_Compute_Dmem_MethArgs},
  NULL};
static int MemBpUnitSpec::* TA_MemBpUnitSpec_MbrOff;
static MemberDef_data TA_MemBpUnitSpec_MemberDef[]={
  {&TA_MinMaxRange,NULL,"inx_range"," range of activation for input transformation","","",
    *((ta_memb_ptr*)&(TA_MemBpUnitSpec_MbrOff=(int MemBpUnitSpec::*)(&MemBpUnitSpec::inx_range))),0,NULL,0},
  {&TA_bool,NULL,"skip_act_oux_deriv"," do not include h' derivative of output activation fctn in computing dEdNet (Gers & Schmidhuber do this)","","",
    *((ta_memb_ptr*)&(TA_MemBpUnitSpec_MbrOff=(int MemBpUnitSpec::*)(&MemBpUnitSpec::skip_act_oux_deriv))),0,NULL,0},
  NULL};
static MethodArgs_data TA_MemBpUnitSpec_InitState_MethArgs[]={
  {&TA_Unit_ptr,NULL,"u",""},
  NULL};
static MethodArgs_data TA_MemBpUnitSpec_Compute_Net_MethArgs[]={
  {&TA_Unit_ptr,NULL,"u",""},
  NULL};
static MethodArgs_data TA_MemBpUnitSpec_Compute_Act_MethArgs[]={
  {&TA_Unit_ptr,NULL,"u",""},
  NULL};
static MethodArgs_data TA_MemBpUnitSpec_CheckConfig_MethArgs[]={
  {&TA_Unit_ptr,NULL,"u",""},
  {&TA_Layer_ptr,NULL,"lay",""},
  {&TA_TrialProcess_ptr,NULL,"trl",""},
  NULL};
static MethodArgs_data TA_MemBpUnitSpec_Compute_dEdNet_MethArgs[]={
  {&TA_BpUnit_ptr,NULL,"u",""},
  NULL};
static MethodDef_data TA_MemBpUnitSpec_MethodDef[]={
  {&TA_void,NULL,"InitState"," initialize unit state variables","","",
    1,1,-1,0,NULL,cssElCFun_MemBpUnitSpec_InitState_stub,TA_MemBpUnitSpec_InitState_MethArgs},
  {&TA_void,NULL,"Compute_Net","","","",
    1,1,-1,0,NULL,cssElCFun_MemBpUnitSpec_Compute_Net_stub,TA_MemBpUnitSpec_Compute_Net_MethArgs},
  {&TA_void,NULL,"Compute_Act","","","",
    1,1,-1,0,NULL,cssElCFun_MemBpUnitSpec_Compute_Act_stub,TA_MemBpUnitSpec_Compute_Act_MethArgs},
  {&TA_bool,NULL,"CheckConfig"," check for for misc configuration settings required by different algorithms, including settings on the processes","","",
    1,3,-1,0,NULL,cssElCFun_MemBpUnitSpec_CheckConfig_stub,TA_MemBpUnitSpec_CheckConfig_MethArgs},
  {&TA_void,NULL,"Compute_dEdNet"," error wrt net input this updates dMdw_sum","","",
    1,1,-1,0,NULL,cssElCFun_MemBpUnitSpec_Compute_dEdNet_stub,TA_MemBpUnitSpec_Compute_dEdNet_MethArgs},
  NULL};
static MethodDef_data TA_LstmBpTrial_MethodDef[]={
  {&TA_void,NULL,"Compute_ClampExt","","","",
    0,0,-1,0,NULL,cssElCFun_LstmBpTrial_Compute_ClampExt_stub,NULL},
  {&TA_void,NULL,"Compute_NetHid","","","",
    0,0,-1,0,NULL,cssElCFun_LstmBpTrial_Compute_NetHid_stub,NULL},
  {&TA_void,NULL,"Compute_NetOut","","","",
    0,0,-1,0,NULL,cssElCFun_LstmBpTrial_Compute_NetOut_stub,NULL},
  {&TA_void,NULL,"Compute_ActHid","","","",
    0,0,-1,0,NULL,cssElCFun_LstmBpTrial_Compute_ActHid_stub,NULL},
  {&TA_void,NULL,"Compute_ActOut","","","",
    0,0,-1,0,NULL,cssElCFun_LstmBpTrial_Compute_ActOut_stub,NULL},
  {&TA_void,NULL,"Compute_Dmem","","","",
    0,0,-1,0,NULL,cssElCFun_LstmBpTrial_Compute_Dmem_stub,NULL},
  NULL};

// Init Function


static bool ta_Init_lstm_done = false;

void ta_Init_lstm() {
  TypeDef* sbt;

  if(ta_Init_lstm_done) return;
  ta_Init_lstm_done = true;

  ta_Init_bp();
  ta_Init_ta();
  ta_Init_pdp();
  ta_Init_ta_misc();
  ta_Init_iv_graphic();

  taMisc::in_init = true;

  taMisc::types.Add(&TA_LstmBpUnit);
    TAI_LstmBpUnit = new LstmBpUnit;
    TA_LstmBpUnit.AddParFormal(&TA_class);
    TA_LstmBpUnit.AddParCache(&TA_taBase);
    TA_LstmBpUnit.AddClassPar(&TA_BpUnit,0);
    tac_AddMembers(TA_LstmBpUnit,TA_LstmBpUnit_MemberDef);
  taMisc::types.Add(&TA_MemBpUnit);
    TAI_MemBpUnit = new MemBpUnit;
    TA_MemBpUnit.AddParFormal(&TA_class);
    TA_MemBpUnit.AddParCache(&TA_taBase);
    TA_MemBpUnit.AddClassPar(&TA_LstmBpUnit,0);
    tac_AddMembers(TA_MemBpUnit,TA_MemBpUnit_MemberDef);
  taMisc::types.Add(&TA_LstmBpUnit_ptr);
    TA_LstmBpUnit_ptr.AddParents(&TA_LstmBpUnit);
  taMisc::types.Add(&TA_LstmBpConSpec);
    TAI_LstmBpConSpec = new LstmBpConSpec;
    TA_LstmBpConSpec.AddParFormal(&TA_class);
    TA_LstmBpConSpec.AddParCache(&TA_taBase);
    TA_LstmBpConSpec.AddClassPar(&TA_BpConSpec,0);
    tac_AddEnum(TA_LstmBpConSpec, "GateType", "", "", "", "", TA_LstmBpConSpec_GateType);
    tac_AddMembers(TA_LstmBpConSpec,TA_LstmBpConSpec_MemberDef);
    tac_AddMethods(TA_LstmBpConSpec,TA_LstmBpConSpec_MethodDef);
  taMisc::types.Add(&TA_const_LstmBpConSpec);
    TA_const_LstmBpConSpec.AddParents(&TA_const, &TA_LstmBpConSpec);
  taMisc::types.Add(&TA_const_LstmBpConSpec_ref);
    TA_const_LstmBpConSpec_ref.AddParents(&TA_const_LstmBpConSpec);
  taMisc::types.Add(&TA_InGateToMemConSpec);
    TAI_InGateToMemConSpec = new InGateToMemConSpec;
    TA_InGateToMemConSpec.AddParFormal(&TA_class);
    TA_InGateToMemConSpec.AddParCache(&TA_taBase);
    TA_InGateToMemConSpec.AddClassPar(&TA_LstmBpConSpec,0);
    tac_AddMethods(TA_InGateToMemConSpec,TA_InGateToMemConSpec_MethodDef);
  taMisc::types.Add(&TA_const_InGateToMemConSpec);
    TA_const_InGateToMemConSpec.AddParents(&TA_const, &TA_InGateToMemConSpec);
  taMisc::types.Add(&TA_FrgGateToMemConSpec);
    TAI_FrgGateToMemConSpec = new FrgGateToMemConSpec;
    TA_FrgGateToMemConSpec.AddParFormal(&TA_class);
    TA_FrgGateToMemConSpec.AddParCache(&TA_taBase);
    TA_FrgGateToMemConSpec.AddClassPar(&TA_LstmBpConSpec,0);
    tac_AddMethods(TA_FrgGateToMemConSpec,TA_FrgGateToMemConSpec_MethodDef);
  taMisc::types.Add(&TA_const_InGateToMemConSpec_ref);
    TA_const_InGateToMemConSpec_ref.AddParents(&TA_const_InGateToMemConSpec);
  taMisc::types.Add(&TA_MemBpUnit_ptr);
    TA_MemBpUnit_ptr.AddParents(&TA_MemBpUnit);
  taMisc::types.Add(&TA_const_FrgGateToMemConSpec);
    TA_const_FrgGateToMemConSpec.AddParents(&TA_const, &TA_FrgGateToMemConSpec);
  taMisc::types.Add(&TA_const_FrgGateToMemConSpec_ref);
    TA_const_FrgGateToMemConSpec_ref.AddParents(&TA_const_FrgGateToMemConSpec);
  taMisc::types.Add(&TA_OutGateToMemConSpec);
    TAI_OutGateToMemConSpec = new OutGateToMemConSpec;
    TA_OutGateToMemConSpec.AddParFormal(&TA_class);
    TA_OutGateToMemConSpec.AddParCache(&TA_taBase);
    TA_OutGateToMemConSpec.AddClassPar(&TA_LstmBpConSpec,0);
    tac_AddMethods(TA_OutGateToMemConSpec,TA_OutGateToMemConSpec_MethodDef);
  taMisc::types.Add(&TA_const_OutGateToMemConSpec);
    TA_const_OutGateToMemConSpec.AddParents(&TA_const, &TA_OutGateToMemConSpec);
  taMisc::types.Add(&TA_const_OutGateToMemConSpec_ref);
    TA_const_OutGateToMemConSpec_ref.AddParents(&TA_const_OutGateToMemConSpec);
  taMisc::types.Add(&TA_DmemBpCon);
    TAI_DmemBpCon = new DmemBpCon;
    TA_DmemBpCon.AddParFormal(&TA_class);
    TA_DmemBpCon.AddParCache(&TA_taBase);
    TA_DmemBpCon.AddClassPar(&TA_BpCon,0);
    tac_AddMembers(TA_DmemBpCon,TA_DmemBpCon_MemberDef);
    tac_AddMethods(TA_DmemBpCon,TA_DmemBpCon_MethodDef);
  taMisc::types.Add(&TA_DmemBpCon_ptr);
    TA_DmemBpCon_ptr.AddParents(&TA_DmemBpCon);
  taMisc::types.Add(&TA_const_DmemBpCon);
    TA_const_DmemBpCon.AddParents(&TA_const, &TA_DmemBpCon);
  taMisc::types.Add(&TA_const_DmemBpCon_ref);
    TA_const_DmemBpCon_ref.AddParents(&TA_const_DmemBpCon);
  taMisc::types.Add(&TA_DmemBpConSpec);
    TAI_DmemBpConSpec = new DmemBpConSpec;
    TA_DmemBpConSpec.AddParFormal(&TA_class);
    TA_DmemBpConSpec.AddParCache(&TA_taBase);
    TA_DmemBpConSpec.AddClassPar(&TA_LstmBpConSpec,0);
    tac_AddMethods(TA_DmemBpConSpec,TA_DmemBpConSpec_MethodDef);
  taMisc::types.Add(&TA_const_DmemBpConSpec);
    TA_const_DmemBpConSpec.AddParents(&TA_const, &TA_DmemBpConSpec);
  taMisc::types.Add(&TA_const_DmemBpConSpec_ref);
    TA_const_DmemBpConSpec_ref.AddParents(&TA_const_DmemBpConSpec);
  taMisc::types.Add(&TA_InGateInConSpec);
    TAI_InGateInConSpec = new InGateInConSpec;
    TA_InGateInConSpec.AddParFormal(&TA_class);
    TA_InGateInConSpec.AddParCache(&TA_taBase);
    TA_InGateInConSpec.AddClassPar(&TA_DmemBpConSpec,0);
    tac_AddMethods(TA_InGateInConSpec,TA_InGateInConSpec_MethodDef);
  taMisc::types.Add(&TA_const_InGateInConSpec);
    TA_const_InGateInConSpec.AddParents(&TA_const, &TA_InGateInConSpec);
  taMisc::types.Add(&TA_const_InGateInConSpec_ref);
    TA_const_InGateInConSpec_ref.AddParents(&TA_const_InGateInConSpec);
  taMisc::types.Add(&TA_FrgGateInConSpec);
    TAI_FrgGateInConSpec = new FrgGateInConSpec;
    TA_FrgGateInConSpec.AddParFormal(&TA_class);
    TA_FrgGateInConSpec.AddParCache(&TA_taBase);
    TA_FrgGateInConSpec.AddClassPar(&TA_DmemBpConSpec,0);
    tac_AddMethods(TA_FrgGateInConSpec,TA_FrgGateInConSpec_MethodDef);
  taMisc::types.Add(&TA_const_FrgGateInConSpec);
    TA_const_FrgGateInConSpec.AddParents(&TA_const, &TA_FrgGateInConSpec);
  taMisc::types.Add(&TA_const_FrgGateInConSpec_ref);
    TA_const_FrgGateInConSpec_ref.AddParents(&TA_const_FrgGateInConSpec);
  taMisc::types.Add(&TA_MemGateInConSpec);
    TAI_MemGateInConSpec = new MemGateInConSpec;
    TA_MemGateInConSpec.AddParFormal(&TA_class);
    TA_MemGateInConSpec.AddParCache(&TA_taBase);
    TA_MemGateInConSpec.AddClassPar(&TA_DmemBpConSpec,0);
    tac_AddMethods(TA_MemGateInConSpec,TA_MemGateInConSpec_MethodDef);
  taMisc::types.Add(&TA_const_MemGateInConSpec);
    TA_const_MemGateInConSpec.AddParents(&TA_const, &TA_MemGateInConSpec);
  taMisc::types.Add(&TA_const_MemGateInConSpec_ref);
    TA_const_MemGateInConSpec_ref.AddParents(&TA_const_MemGateInConSpec);
  taMisc::types.Add(&TA_LstmBpUnitSpec);
    TAI_LstmBpUnitSpec = new LstmBpUnitSpec;
    TA_LstmBpUnitSpec.AddParFormal(&TA_class);
    TA_LstmBpUnitSpec.AddParCache(&TA_taBase);
    TA_LstmBpUnitSpec.AddClassPar(&TA_BpUnitSpec,0);
    tac_AddMethods(TA_LstmBpUnitSpec,TA_LstmBpUnitSpec_MethodDef);
  taMisc::types.Add(&TA_const_LstmBpUnit);
    TA_const_LstmBpUnit.AddParents(&TA_const, &TA_LstmBpUnit);
  taMisc::types.Add(&TA_const_LstmBpUnitSpec);
    TA_const_LstmBpUnitSpec.AddParents(&TA_const, &TA_LstmBpUnitSpec);
  taMisc::types.Add(&TA_const_LstmBpUnit_ref);
    TA_const_LstmBpUnit_ref.AddParents(&TA_const_LstmBpUnit);
  taMisc::types.Add(&TA_const_LstmBpUnitSpec_ref);
    TA_const_LstmBpUnitSpec_ref.AddParents(&TA_const_LstmBpUnitSpec);
  taMisc::types.Add(&TA_DmemBpUnitSpec);
    TAI_DmemBpUnitSpec = new DmemBpUnitSpec;
    TA_DmemBpUnitSpec.AddParFormal(&TA_class);
    TA_DmemBpUnitSpec.AddParCache(&TA_taBase);
    TA_DmemBpUnitSpec.AddClassPar(&TA_LstmBpUnitSpec,0);
    tac_AddMethods(TA_DmemBpUnitSpec,TA_DmemBpUnitSpec_MethodDef);
  taMisc::types.Add(&TA_const_DmemBpUnitSpec);
    TA_const_DmemBpUnitSpec.AddParents(&TA_const, &TA_DmemBpUnitSpec);
  taMisc::types.Add(&TA_MemBpUnitSpec);
    TAI_MemBpUnitSpec = new MemBpUnitSpec;
    TA_MemBpUnitSpec.AddParFormal(&TA_class);
    TA_MemBpUnitSpec.AddParCache(&TA_taBase);
    TA_MemBpUnitSpec.AddClassPar(&TA_DmemBpUnitSpec,0);
    tac_AddMembers(TA_MemBpUnitSpec,TA_MemBpUnitSpec_MemberDef);
    tac_AddMethods(TA_MemBpUnitSpec,TA_MemBpUnitSpec_MethodDef);
  taMisc::types.Add(&TA_const_DmemBpUnitSpec_ref);
    TA_const_DmemBpUnitSpec_ref.AddParents(&TA_const_DmemBpUnitSpec);
  taMisc::types.Add(&TA_const_MemBpUnit);
    TA_const_MemBpUnit.AddParents(&TA_const, &TA_MemBpUnit);
  taMisc::types.Add(&TA_const_MemBpUnitSpec);
    TA_const_MemBpUnitSpec.AddParents(&TA_const, &TA_MemBpUnitSpec);
  taMisc::types.Add(&TA_const_MemBpUnit_ref);
    TA_const_MemBpUnit_ref.AddParents(&TA_const_MemBpUnit);
  taMisc::types.Add(&TA_const_MemBpUnitSpec_ref);
    TA_const_MemBpUnitSpec_ref.AddParents(&TA_const_MemBpUnitSpec);
  taMisc::types.Add(&TA_LstmBpTrial);
    TAI_LstmBpTrial = new LstmBpTrial;
    TA_LstmBpTrial.AddParFormal(&TA_class);
    TA_LstmBpTrial.AddParCache(&TA_taBase);
    TA_LstmBpTrial.AddClassPar(&TA_BpTrial,0);
    tac_AddMethods(TA_LstmBpTrial,TA_LstmBpTrial_MethodDef);
  taMisc::types.Add(&TA_const_LstmBpTrial);
    TA_const_LstmBpTrial.AddParents(&TA_const, &TA_LstmBpTrial);
  taMisc::types.Add(&TA_const_LstmBpTrial_ref);
    TA_const_LstmBpTrial_ref.AddParents(&TA_const_LstmBpTrial);


  taMisc::in_init = false;
} 
